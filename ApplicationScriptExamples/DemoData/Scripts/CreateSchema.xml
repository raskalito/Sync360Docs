<?xml version="1.0" encoding="utf-8"?>
<script>
  <set var="ProjectName">{CallSettings}</set>
  <set var="DBName">MigrationDB_{ProjectName}</set>
  <log>Creating {DBName} database</log>
  <update in="dbmaster" entity="d">
    <query>
            IF DB_ID('{DBName}') IS NULL
            CREATE DATABASE [{DBName}]
        </query>
  </update>
  <update in="dbmaster" entity="d">
    <query>
        IF DB_ID('{DBName}') IS NOT NULL
        ALTER DATABASE [{DBName}] SET RECOVERY SIMPLE
      </query>
  </update>
  <log>Creating {DBName} database schema</log>
  <update in="dbmaster" entity="d">
    <query>
          USE [{DBName}]

          IF OBJECT_ID('[dbo].[Sessions]') IS NULL
          BEGIN
          /****** Object:  Table [dbo].[Sessions]    Script Date: 20.01.2014 14:02:26 ******/
          CREATE TABLE [dbo].[Sessions](
          [SessionID] [int] IDENTITY(1,1) NOT NULL,
          [EntityName] [nvarchar](64) NOT NULL,
          [Start] [datetime] NOT NULL,
          [Finish] [datetime] NULL,
          [StartModifiedDateTime] [datetime] NULL,
          CONSTRAINT [PK_Sessions] PRIMARY KEY CLUSTERED
          (
          [SessionID] ASC
          )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
          ) ON [PRIMARY]
          END

          IF OBJECT_ID('[dbo].[Entities]') IS NULL
          BEGIN
          /****** Object:  Table [dbo].[Entities]    Script Date: 20.01.2014 14:02:54 ******/
          CREATE TABLE [dbo].[Entities](
          [EntityID] [uniqueidentifier] NOT NULL,
          [RelatedEntityID] [uniqueidentifier] NOT NULL,
          [EntityName] [nvarchar](64) NOT NULL,
          [AttributesMappingVersion] [varchar](50) NOT NULL,
          [State] [nvarchar](50) NOT NULL,
          [IsDirty] [bit] NOT NULL,
          CONSTRAINT [PK_Entities] PRIMARY KEY CLUSTERED
          (
          [EntityID] ASC,
          [RelatedEntityID] ASC,
          [EntityName] ASC
          )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
          ) ON [PRIMARY]
          END

          IF OBJECT_ID('[dbo].[Errors]') IS NULL
          BEGIN
          /****** Object:  Table [dbo].[Errors]    Script Date: 20.01.2014 14:02:31 ******/
          CREATE TABLE [dbo].[Errors](
          [ErrorID] [int] IDENTITY(1,1) NOT NULL,
          [EntityID] [uniqueidentifier] NOT NULL,
          [RelatedEntityID] [uniqueidentifier] NOT NULL,
          [EntityName] [nvarchar](64) NOT NULL,
          [SessionID] [int] NOT NULL,
          [DateTime] [datetime] NOT NULL,
          [Message] [nvarchar](max) NOT NULL,
          [FullMessage] [nvarchar](max) NOT NULL,
          CONSTRAINT [PK_Errors] PRIMARY KEY CLUSTERED
          (
          [ErrorID] ASC
          )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
          ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

          ALTER TABLE [dbo].[Errors]  WITH CHECK ADD  CONSTRAINT [FK_Errors_Entities] FOREIGN KEY([EntityID], [RelatedEntityID], [EntityName])
          REFERENCES [dbo].[Entities] ([EntityID], [RelatedEntityID], [EntityName])

          ALTER TABLE [dbo].[Errors]  WITH CHECK ADD  CONSTRAINT [FK_Errors_Sessions] FOREIGN KEY([SessionID])
          REFERENCES [dbo].[Sessions] ([SessionID])
          END

          IF OBJECT_ID('[dbo].[MigrationStatistics]') IS NULL
          BEGIN
          /****** Object:  Table [dbo].[MigrationStatistics]    Script Date: 06/10/2014 17:13:16 ******/
          CREATE TABLE [dbo].[MigrationStatistics](
          [EntityName] [nvarchar](64) NOT NULL,
          [TotalSrcCount] [int] NOT NULL,
          [TotalDstCount] [int] NOT NULL,
          [LastUpdated] [datetime] NOT NULL,
          CONSTRAINT [PK_MigrationStatistics] PRIMARY KEY CLUSTERED
          (
          [EntityName] ASC
          )WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
          ) ON [PRIMARY]
          END

          IF OBJECT_ID('[dbo].[vMigrationStatistics]') IS NULL
          /****** Object:  View [dbo].[vMigrationStatistics]    Script Date: 06/10/2014 21:18:20 ******/
          BEGIN
          exec sp_executesql N'CREATE VIEW [dbo].[vMigrationStatistics]
          AS
          SELECT stat.EntityName,
          stat.TotalSrcCount,
          stat.TotalDstCount,
          DstSuccessCount = (SELECT count(*) FROM [dbo].[Entities] e WHERE e.EntityName = stat.EntityName AND IsDirty = 0 AND e.[State] = ''SUCCESS''),
          DstPartialCount = (SELECT count(*) FROM [dbo].[Entities] e WHERE e.EntityName = stat.EntityName AND e.[State] = ''PARTIAL''),
          DstErrorCount = (SELECT count(*)
          FROM (SELECT MAX(ErrorID) as ErrorID FROM [dbo].[Errors] GROUP BY EntityID, RelatedEntityID) LastErr
          INNER JOIN [dbo].[Errors] err ON err.ErrorID = LastErr.ErrorID
          INNER JOIN [dbo].[Entities] ent ON ent.EntityID = err.EntityID AND ent.RelatedEntityID = err.RelatedEntityID
          WHERE ent.[State] IN(''FAILED'',''PARTIAL'') AND ent.EntityName = stat.EntityName),
          MigrationPercent = CASE
          WHEN stat.TotalSrcCount = 0 THEN CAST(100 as decimal)
          ELSE cast(100 as decimal) / cast(stat.TotalSrcCount as decimal) * cast((SELECT count(*) FROM [dbo].[Entities] e WHERE e.EntityName = stat.EntityName AND IsDirty = 0 AND e.[State] = ''SUCCESS'') as decimal)
          END,
          stat.LastUpdated
          FROM         [dbo].[MigrationStatistics] as stat'
          END

          IF OBJECT_ID('[dbo].[pGetStatusDetails]') IS NULL
          BEGIN
          /****** Object:  StoredProcedure [dbo].[pGetStatusDetails]    Script Date: 06/12/2014 20:37:52 ******/
          exec sp_executesql N'CREATE PROCEDURE [dbo].[pGetStatusDetails]
          @EntityName nvarchar(64)
          AS
          BEGIN
          SELECT err.EntityID,
          err.RelatedEntityID,
          err.[DateTime],
          err.[Message],
          err.[FullMessage]
          FROM (SELECT MAX(ErrorID) as ErrorID FROM [dbo].[Errors] GROUP BY EntityID, RelatedEntityID) LastErr
          INNER JOIN [dbo].[Errors] err ON err.ErrorID = LastErr.ErrorID
          INNER JOIN [dbo].[Entities] ent ON ent.EntityID = err.EntityID AND ent.RelatedEntityID = err.RelatedEntityID
          WHERE ent.[State] IN(''FAILED'',''PARTIAL'')
          AND ent.EntityName = @EntityName
          END'
          END

        </query>
  </update>
  <log>{DBName} database schema created</log>
</script>