<?xml version="1.0" encoding="utf-8"?>
<script>
  <include name="Config" />
  <set var="EntityName">{Settings.EntityName}</set>
  <set var="KeyField">{Settings.KeyField}</set>
  <set var="RelatedKeyField">{Settings.RelatedKeyField}</set>
  <set var="Settings.PrimaryField" unless="Settings.PrimaryField.isSet and Settings.PrimaryField &lt;&gt; ''">{KeyField}</set>
  <set var="PrimaryField">{Settings.PrimaryField}</set>
  <log>Synchronize entity: {EntityName}</log>
  <include name="MapAttributes/MapAttributes_{EntityName}" />
  <set var="AttributesMapping">{Settings.AttributesMapping}</set>
  <set var="EntitiesMappingReverse">{Settings.EntitiesMappingReverse}</set>
  <select from="dbmigration" entity="Sessions" count="1" page="0" var="Sessions">
    <where>
      <condition attr="EntityName" op="eq">{EntityName}</condition>
      <condition attr="StartModifiedDateTime" op="ex" />
    </where>
    <order by="Start" desc="true" />
    <attr name="Start" />
    <attr name="StartModifiedDateTime" />
  </select>
  <set var="FirstSyncDateTime">{new DateTime(1901, 1, 1)}</set>
  <set var="LastSyncDateTime">{FirstSyncDateTime}</set>
  <set var="StartModifiedDateTime">{FirstSyncDateTime}</set>
  <set var="LastSyncDateTime" if="Sessions.Length &gt; 0">{Sessions[0].Start.ToLocalTime()}</set>
  <set var="StartModifiedDateTime" if="Sessions.Length &gt; 0">{Sessions[0].StartModifiedDateTime.ToLocalTime()}</set>
  <set var="MaxEntityModifiedDateTime">{StartModifiedDateTime}</set>
  <log>LastSyncDateTime: {LastSyncDateTime}</log>
  <create in="dbmigration" entity="Sessions" var="SessionID">
    <attr name="SessionID">{null}</attr>
    <attr name="EntityName">{EntityName}</attr>
    <attr name="Start">{Utils.Now.ToUniversalTime()}</attr>
    <attr name="StartModifiedDateTime">{StartModifiedDateTime.ToUniversalTime()}</attr>
  </create>
  <set Settings.SessionID="SessionID" />
  <log>SessionID: {SessionID}</log>
  <set var="Continue">{true}</set>
  <while condition="Continue">
    <log>StartModifiedDateTime: {StartModifiedDateTime.ToLocalTime()}</log>
    <!--Get All processing entities-->
    <set var="AllProcessing"></set>
    <select from="dbmigration" entity="Entities" var="AllProcessing">
      <where>
        <condition attr="EntityName" op="eq">{EntityName}</condition>
      </where>
      <attr name="EntityID" />
      <attr name="RelatedEntityID" />
      <attr name="State" />
      <attr name="IsDirty" />
      <attr name="AttributesMappingVersion" />
    </select>
    <set var="ProcessedIDs">{new List()}</set>
    <set var="AllProcessingEntities">{new Dictionary()}</set>
    <for var="Entity" in="AllProcessing">
      <set var="AllProcessingEntities[Entity.EntityID.ToString() + ':' + Entity.RelatedEntityID.ToString()]">{Entity}</set>
      <set var="ProcessedIDs[]" if="Entity.State eq 'SUCCESS' and Entity.AttributesMappingVersion eq Settings.AttributesMappingVersion">{Entity.EntityID}</set>
    </for>
    <log>ProcessedIDs.Count: {ProcessedIDs.Count}</log>
    <!--Get Settings.SyncCycleSize / 2 of NOT processed entities-->
    <set var="NotProcessedEntities"></set>
    <select from="dbmigration" entity="Entities" count="Settings.SyncCycleSize / 2" page="0" var="NotProcessedEntities">
      <where>
        <condition attr="EntityName" op="eq">{EntityName}</condition>
        <condition attr="State" op="ne">SUCCESS</condition>
      </where>
      <attr name="EntityID" />
      <attr name="RelatedEntityID" />
      <attr name="State" />
      <attr name="IsDirty" />
      <attr name="AttributesMappingVersion" />
    </select>
    <set var="NotProcessedIDs">{new List()}</set>
    <for var="Entity" in="NotProcessedEntities">
      <set var="NotProcessedIDs[]">{Entity.EntityID}</set>
    </for>
    <!--Get Settings.SyncCycleSize source CRM entities by 'modifiedon' field-->
    <select from="crmsrc" entity="{EntityName}" var="SrcEntities" page="0" count="Settings.SyncCycleSize">
      <where>
        <or>
          <condition attr="{KeyField}" op="in" if="NotProcessedIDs.Count gt 0">{NotProcessedIDs}</condition>
          <condition attr="modifiedon" op="ge">{StartModifiedDateTime.ToUniversalTime()}</condition>
        </or>
      </where>
      <order by="modifiedon" />
      <attr name="{KeyField}" />
      <attr name="{PrimaryField}" />
      <for var="Attr" in="AttributesMapping.Values">
        <attr name="{Attr.src}" />
      </for>
    </select>
    <log>SrcEntities.Count: {SrcEntities.Count}</log>
    <set var="Continue" if="SrcEntities.Count lt Settings.SyncCycleSize">{false}</set>
    <set var="CurrentProcessedIDs">{new List()}</set>
    <for var="Entity" in="SrcEntities">
      <set var="CurrentProcessedIDs[]">{Entity[KeyField]}</set>
      <set Params="new Object()" Params.Settings="Settings" Params.Entity="Entity" />
      <MapValues CallSettings="Params" />
      <set var="Entity">{Params.Entity}</set>
      <create in="dbmigration" entity="Entities" unless="AllProcessingEntities[Entity.CombinedKey].isSet">
        <attr name="EntityID">{Entity.KeyField}</attr>
        <attr name="RelatedEntityID" if="RelatedKeyField ne ''">{Entity.RelatedKeyField}</attr>
        <attr name="RelatedEntityID" if="RelatedKeyField eq ''">{new Guid()}</attr>
        <attr name="EntityName">{EntityName}</attr>
        <attr name="State">NOT PROCESSED</attr>
        <attr name="IsDirty">{false}</attr>
        <attr name="AttributesMappingVersion">{Settings.AttributesMappingVersion}</attr>
      </create>
      <set Entity.IsDirty="AllProcessingEntities[Entity.CombinedKey].isSet and AllProcessingEntities[Entity.CombinedKey].IsDirty" />
      <set Params="new Object()" Params.Settings="Settings" Params.Entity="Entity" />
      <ProcessEntity CallSettings="Params" />
      <set var="MaxEntityModifiedDateTime" if="Entity.modifiedon gt MaxEntityModifiedDateTime.ToUniversalTime()">{Entity.modifiedon}</set>
    </for>
    <!-- Calculate new StartModifiedDateTime -->
    <set var="NewStartModifiedDateTime">{MaxEntityModifiedDateTime}</set>
    <if condition="!Continue">
      <log>Calculate new StartModifiedDateTime. Current value: {NewStartModifiedDateTime.ToLocalTime()}</log>
      <select from="crmsrc" entity="{EntityName}" var="NextSrcEntities">
        <where>
          <or>
            <condition attr="modifiedon" op="ge">{NewStartModifiedDateTime.ToUniversalTime()}</condition>
          </or>
        </where>
        <order by="modifiedon" />
        <attr name="modifiedon" />
        <attr name="{KeyField}" />
        <attr name="{PrimaryField}" />
      </select>
      <set var="IsNewEntityExists">{false}</set>
      <for var="Entity" in="NextSrcEntities">
        <set var="IsNewEntityExists" if="!CurrentProcessedIDs.Contains(Entity[KeyField])">{true}</set>
        <log>EntityId: {Entity[KeyField]}, ModifiedOn: {Entity.modifiedon.ToLocalTime()}, IsNotProcessed: {!CurrentProcessedIDs.Contains(Entity[KeyField])}</log>
      </for>
      <set var="NewStartModifiedDateTime" if="!IsNewEntityExists and NextSrcEntities.Count gt 0">{NewStartModifiedDateTime.AddSeconds(1)}</set>
      <log>New StartModifiedDateTime: {NewStartModifiedDateTime.ToLocalTime()}</log>
    </if>
    <!-- Save StartModifiedDateTime -->
    <update in="dbmigration" entity="Sessions">
      <where>
        <condition attr="SessionID" op="eq">{SessionID}</condition>
      </where>
      <attr name="StartModifiedDateTime">{NewStartModifiedDateTime.ToUniversalTime()}</attr>
    </update>
    <set var="StartModifiedDateTime">{NewStartModifiedDateTime}</set>
  </while>
  <update in="dbmigration" entity="Sessions">
    <where>
      <condition attr="SessionID" op="eq">{SessionID}</condition>
    </where>
    <attr name="Finish">{Utils.Now.ToUniversalTime()}</attr>
  </update>
  <log>Synchronization finished</log>
</script>