<?xml version="1.0" encoding="utf-8"?>
<script>
  <set var="Entity">{CallSettings.Entity}</set>
  <set var="Settings">{CallSettings.Settings}</set>
  <set var="EntityName">{Settings.EntityName}</set>
  <set var="KeyField">{Settings.KeyField}</set>
  <set var="AttributesMapping">{Settings.AttributesMapping}</set>
  <set var="CheckedAttributes">{CallSettings.CheckedAttributes}</set>
  <!-- Check if Setting have TargetEntityName -->
  <set var="TargetCheck">{Settings.TargetEntityName}</set>
  <if condition="TargetCheck.isSet">
    <set var="EntityName">{Settings.TargetEntityName}</set>
    <set var="KeyField">{Settings.TargetEntityKeyField}</set>
  </if>
  <!-- Open entity for edit-->
  <if condition="Settings.ClosedStatusCodes.Count gt 0">
    <select from="crmdst" entity="{EntityName}" var="dstEntities">
      <where>
        <condition attr="{KeyField}" op="eq">{Entity.KeyField.ToString()}</condition>
      </where>
      <attr name="statuscode" />
    </select>
    <sandbox verbose="false" if="dstEntities.Count gt 0 and Settings.ClosedStatusCodes.Contains(dstEntities[0].statuscode)">
      <log>Opening closed entity for edit</log>
      <update in="crmdst" entity="{EntityName}">
        <where>
          <condition attr="{KeyField}" op="eq">{Entity.KeyField.ToString()}</condition>
        </where>
        <attr name="statecode">{Settings.OpenStateCode}</attr>
        <attr name="statuscode">{Settings.OpenStatusCode}</attr>
      </update>
      <onerror of="typeof System.Exception" var="ex">
        <set Params="new Object()" Params.EntityID="Entity.KeyField" Params.RelatedEntityID="Entity.RelatedKeyField" Params.Settings="Settings" Params.Message="'Failed to open entity for edit: ' + ex" />
        <LogError CallSettings="Params" />
        <log>{Params.Message}</log>
        <set var="CallSettings.IsDirty">{true}</set>
      </onerror>
    </sandbox>
  </if>
  <sandbox verbose="false" unless="CallSettings.IsDirty">
    <log>Update entire entity</log>
    <update in="crmdst" entity="{EntityName}">
      <where>
        <condition attr="{KeyField}" op="eq">{Entity.KeyField}</condition>
      </where>
      <for var="Attribute" in="AttributesMapping.Values">
        <if condition="Attribute.dstentity.isSet">
          <if condition="Entity[Attribute.src].isSet">
            <set var="Entity[Attribute.src].LogicalName">{Attribute.dstentity}</set>
          </if>
        </if>
        <attr name="{Attribute.dst}" if="CheckedAttributes.Contains(Attribute.dst) and Entity[Attribute.src].isSet  and !Settings.NotUpdatedAttributes.Contains(EntityName + '.' + Attribute.src)" unless="Attribute.type eq 'State' or Attribute.type eq 'Status'">{Entity[Attribute.src]}</attr>
      </for>
    </update>
    <set var="CallSettings.IsDirty">{AttributesMapping.Count ne CheckedAttributes.Count}</set>
    <onerror of="typeof System.Exception" var="ex">
      <set Params="new Object()" Params.EntityID="Entity.KeyField" Params.RelatedEntityID="Entity.RelatedKeyField" Params.Settings="Settings" Params.Exception="ex" Params.Message="'Failed to update entire entity: ' + ex" />
      <LogError CallSettings="Params" />
      <log>{Params.Message}</log>
      <set var="CallSettings.IsDirty">{true}</set>
    </onerror>
  </sandbox>
  <if condition="CallSettings.IsDirty">
    <set CallSettings.IsDirty="false" />
    <!-- Update lookups -->
    <log>Update lookups</log>
    <for var="Attribute" in="AttributesMapping.Values">
      <sandbox verbose="false" if="Entity[Attribute.src].isSet and     (Attribute.type eq 'Customer' or Attribute.type eq 'Lookup' or Attribute.type eq 'Owner' or     Attribute.type eq 'EntityName' or Attribute.type eq 'PartyList')     and !Settings.NotUpdatedAttributes.Contains(EntityName + '.' + Attribute.src)">
        <update in="crmdst" entity="{EntityName}">
          <where>
            <condition attr="{KeyField}" op="eq">{Entity.KeyField.ToString()}</condition>
          </where>
          <if condition="Attribute.dstentity.isSet">
            <set var="Entity[Attribute.src].LogicalName">{Attribute.dstentity}</set>
          </if>
          <!--<set var="Entity[Attribute.src].LogicalName">{Attribute.dst}</set>-->
          <attr name="{Attribute.dst}">{Entity[Attribute.src]}</attr>
        </update>
        <onerror of="typeof System.Exception" var="ex">
          <set Params="new Object()" Params.EntityID="Entity.KeyField" Params.RelatedEntityID="Entity.RelatedKeyField" Params.Settings="Settings" Params.Exception="ex" Params.Message="'Failed to update lookup attribute ''' + Attribute.dst + ''': ' + ex" />
          <LogError CallSettings="Params" />
          <log>{Params.Message}</log>
          <set var="CallSettings.IsDirty">{true}</set>
          <if condition="Attribute.src eq 'to' or Attribute.src eq 'from' or Attribute.src eq 'cc' or Attribute.src eq 'bcc'">
            <!-- Creating and remember-->
            <set var="CreatedEntities">{new List()}</set>
            <log>About to fix that</log>
            <for var="attr" in="Entity[Attribute.src]">
              <if condition="attr.LogicalName eq 'contact' or           attr.LogicalName eq 'account' or           attr.LogicalName eq 'lead' or           attr.LogicalName eq 'queue'">
                <set var="SelectedFromParty">{new List()}</set>
                <if condition="!attr.Id.ToString().Contains('0000')">
                  <select from="crmdst" entity="{attr.LogicalName}" var="SelectedFromParty">
                    <where>
                      <condition attr="{attr.LogicalName}id" op="eq">{attr.Id.ToString()}</condition>
                    </where>
                  </select>
                </if>
                <if condition="SelectedFromParty.Count eq 0">
                  <create in="crmdst" entity="{attr.LogicalName}" var="id">
                    <attr name="{attr.LogicalName}id" unless="attr.Id.ToString().Contains('0000')">{attr.Id.ToString()}</attr>
                    <if condition="attr.LogicalName eq 'contact'">
                      <attr name="lastname">{attr.Name}</attr>
                    </if>
                    <if condition="attr.LogicalName eq 'account'">
                      <attr name="name">{attr.Name}</attr>
                    </if>
                    <if condition="attr.LogicalName eq 'lead'">
                      <attr name="lastname">{attr.Name}</attr>
                      <attr name="subject">{attr.Name}</attr>
                    </if>
                    <if condition="attr.LogicalName eq 'queue'">
                      <attr name="name">{attr.Name}</attr>
                    </if>
                  </create>
                  <set var="attr.Id">{id}</set>
                  <!--Changing id if it was Empty GUID -->
                  <set var="Record">{new Object()}</set>
                  <set var="Record.EntityName">{attr.LogicalName}</set>
                  <set var="Record.Id">{id.ToString()}</set>
                  <set var="CreatedEntities[]">{Record}</set>
                </if>
              </if>
            </for>
            <!-- Update Again-->
            <if condition="CreatedEntities.Count gt 0">
              <!-- if we created smth-->
              <update in="crmdst" entity="{Settings.EntityName}">
                <where>
                  <condition attr="{Settings.KeyField}" op="eq">{Entity[Settings.KeyField].ToString()}</condition>
                </where>
                <attr name="{Attribute.dst}">{Entity[Attribute.src]}</attr>
              </update>
              <!-- Delete Created records-->
              <for var="record" in="CreatedEntities">
                <delete in="crmdst" entity="{record.EntityName}">
                  <where>
                    <condition attr="{record.EntityName}id" op="eq">{record.Id}</condition>
                  </where>
                </delete>
              </for>
            </if>
            <set var="CallSettings.IsDirty">{false}</set>
          </if>
        </onerror>
      </sandbox>
    </for>
    <!-- Update plains -->
    <sandbox verbose="false">
      <log>Update plains</log>
      <update in="crmdst" entity="{EntityName}">
        <where>
          <condition attr="{KeyField}" op="eq">{Entity.KeyField.ToString()}</condition>
        </where>
        <for var="Attribute" in="AttributesMapping.Values">
          <attr name="{Attribute.dst}" if="Entity[Attribute.src].isSet and !Settings.NotUpdatedAttributes.Contains(EntityName + '.' + Attribute.src)" unless="Attribute.type eq 'State' or Attribute.type eq 'Status' or Attribute.type eq 'Customer' or Attribute.type eq 'Lookup' or Attribute.type eq 'Owner' or Attribute.type eq 'EntityName' or Attribute.type eq 'PartyList'">{Entity[Attribute.src]}</attr>
        </for>
      </update>
      <onerror of="typeof System.Exception" var="ex">
        <set Params="new Object()" Params.EntityID="Entity.KeyField" Params.RelatedEntityID="Entity.RelatedKeyField" Params.Settings="Settings" Params.Exception="ex" Params.Message="'Failed to update plain attributes: ' + ex" />
        <LogError CallSettings="Params" />
        <log>{Params.Message}</log>
        <set var="CallSettings.IsDirty">{true}</set>
      </onerror>
    </sandbox>
  </if>
  <!-- Update status -->
  <sandbox verbose="false" unless="CallSettings.IsDirty">
    <log>Update status</log>
    <update in="crmdst" entity="{EntityName}">
      <where>
        <condition attr="{KeyField}" op="eq">{Entity.KeyField.ToString()}</condition>
      </where>
      <for var="Attribute" in="AttributesMapping.Values">
        <attr name="{Attribute.dst}" if="Entity[Attribute.src].isSet and (Attribute.type eq 'State' or Attribute.type eq 'Status')">{Entity[Attribute.src]}</attr>
      </for>
    </update>
    <onerror of="typeof System.Exception" var="ex">
      <set Params="new Object()" Params.EntityID="Entity.KeyField" Params.RelatedEntityID="Entity.RelatedKeyField" Params.Settings="Settings" Params.Exception="ex" Params.Message="'Failed to update status: ' + ex" />
      <LogError CallSettings="Params" />
      <log>{Params.Message}</log>
      <set var="CallSettings.IsDirty">{true}</set>
    </onerror>
  </sandbox>
</script>