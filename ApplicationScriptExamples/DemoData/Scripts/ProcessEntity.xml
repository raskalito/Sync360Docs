<?xml version="1.0" encoding="utf-8"?>
<script>
  <set var="Entity">{CallSettings.Entity}</set>
  <set var="Settings">{CallSettings.Settings}</set>
  <set var="EntityName">{Settings.EntityName}</set>
  <set var="KeyField">{Settings.KeyField}</set>
  <set var="RelatedKeyField">{Settings.RelatedKeyField}</set>
  <set var="PrimaryField">{Settings.PrimaryField}</set>
  <set var="AttributesMapping">{Settings.AttributesMapping}</set>
  <set var="IsDirty">{false}</set>
  <!-- Check if Setting have TargetEntityName -->
  <set var="TargetCheck">{Settings.TargetEntityName}</set>
  <if condition="TargetCheck.isSet">
    <set var="EntityName">{Settings.TargetEntityName}</set>
    <set var="KeyField">{Settings.TargetEntityKeyField}</set>
  </if>
  <sandbox verbose="false">
    <log>Processing entity: {Entity[PrimaryField]} {Entity.CombinedKey}</log>
    <set var="CreatedByUserId">{Settings.CurrentUserId}</set>
    <set var="CreatedByUserId" if="Entity['createdby'].isSet and Settings.EntitiesMappingReverse[Entity['createdby'].Id.ToString()].isSet">{Entity['createdby'].Id}</set>
    <if condition="RelatedKeyField eq ''">
      <select from="crmdst" entity="{EntityName}" var="DstEntities" unless="Entity.IsDirty">
        <where>
          <condition attr="{KeyField}" op="eq">{Entity.KeyField}</condition>
        </where>
      </select>
      <log if="DstEntities.isSet">DstEntities: {DstEntities}</log>
      <log if="Entity.IsDirty">Dirty</log>
      <if condition="TargetCheck.isSet">
        <set var="EntityName">{Settings.EntityName}</set>
      </if>
      <set Params="new Object()" Params.Settings="Settings" Params.AttributesMapping="AttributesMapping" Params.Entity="Entity" Params.CheckedAttributes="new List()" />
      <CheckAttributes CallSettings="Params" />
      <if condition="TargetCheck.isSet">
        <set var="EntityName">{Settings.TargetEntityName}</set>
      </if>
      <set var="CheckedAttributes">{Params.CheckedAttributes}</set>
      <sandbox verbose="false" unless="Entity.IsDirty or DstEntities.Length gt 0">
        <exception if="Entity['statecode'].isSet and Entity['statecode'] ne 0 and Settings.HasClosedState and EntityName ne 'incidentresolution'">Can't create '{EntityName}' entity with statecode {Entity['statecode']}. The entity will be created with the default statecode and after success and full creation the statecode will updated.</exception>
        <context for="crmdst" user="{CreatedByUserId}">
          <create in="crmdst" entity="{EntityName}">
            <attr name="{KeyField}">{Entity.KeyField.ToString()}</attr>
            <for var="Attr" in="AttributesMapping.Values">
              <if condition="Attr.dstentity.isSet">
                <if condition="Entity[Attr.src].isSet">
                  <set var="Entity[Attr.src].LogicalName">{Attr.dstentity}</set>
                </if>
              </if>
              <attr name="{Attr.dst}" if="CheckedAttributes.Contains(Attr.dst) and Entity[Attr.src].isSet">{Entity[Attr.src]}</attr>
            </for>
          </create>
        </context>
        <set var="IsDirty">{AttributesMapping.Count ne CheckedAttributes.Count}</set>
        <onerror of="typeof System.Exception" var="ex">
          <set Params="new Object()" Params.EntityID="Entity.KeyField" Params.RelatedEntityID="Entity.RelatedKeyField" Params.Settings="Settings" Params.Exception="ex" Params.Message="'Failed to update plain attributes: ' + ex" />
          <exception if="!Entity['modifiedon'].isSet">{Params.Message}</exception>
          <LogError CallSettings="Params" />
          <log>{Params.Message}</log>
          <context for="crmdst" user="{CreatedByUserId}">
            <create in="crmdst" entity="{EntityName}">
              <attr name="{KeyField}">{Entity.KeyField.ToString()}</attr>
              <for var="Attribute" in="AttributesMapping.Values">
                <if condition="Attribute.dstentity.isSet">
                  <if condition="Entity[Attribute.src].isSet">
                    <set var="Entity[Attribute.src].LogicalName">{Attribute.dstentity}</set>
                  </if>
                </if>
                <attr name="{Attribute.dst}" if="Entity[Attribute.src].isSet and Attribute.validForCreate and Attribute.required">{Entity[Attribute.src]}</attr>
              </for>
            </create>
          </context>
          <set var="IsDirty">{true}</set>
        </onerror>
      </sandbox>
      <if condition="Entity['modifiedon'].isSet and (Entity.IsDirty or DstEntities.Length gt 0)">
        <set Params="new Object()" Params.Settings="Settings" Params.Entity="Entity" Params.IsDirty="IsDirty or Entity.IsDirty" Params.CheckedAttributes="CheckedAttributes" />
        <UpdateEntity CallSettings="Params" />
        <set var="IsDirty">{Params.IsDirty}</set>
      </if>
    </if>
    <if condition="RelatedKeyField ne ''">
      <set var="Result" if="EntityName eq 'listmember'">{@crmdst.AddListMember(Entity['listid'].Id, Entity['entityid'].Id)}</set>
      <set var="Result" if="EntityName eq 'campaignactivityitem'">{@crmdst.AddItemCampaignActivity(Entity['campaignactivityid'].Id, Entity['itemid'], Entity['itemobjecttypecode'])}</set>
      <set var="Result" if="EntityName eq 'campaignitem'">{@crmdst.AddItemCampaign(Entity['campaignid'].Id, Entity['entityid'], Entity['entitytype'])}</set>
      <set var="Result" if="EntityName eq 'productsubstitute'">{@crmdst.AddSubstituteProduct(Entity['productid'], Entity['substitutedproductid'])}</set>
      <set var="Result" if="EntityName eq 'rolepriveleges'">{@crmdst.AddPrivilegesRole(Entity['roleid'], Entity['privilegeid'])}</set>
      <set var="Result" if="EntityName eq 'teammembership'">{@crmdst.AddMembersTeam(Entity['systemuserid'], Entity['teamid'])}</set>
      <set var="Result" if="!Result.isSet">{@crmdst.AssociateEntities(Settings.TargetEntityName, Entity.KeyField, Settings.OtherEntityName, Entity.RelatedKeyField, Settings.RelationshipName)}</set>
      <exception if="Result.isSet and !Result"></exception>
    </if>
    <!-- Return back EntityName for correct update in DB migration -->
    <if condition="TargetCheck.isSet">
      <set var="EntityName">{Settings.EntityName}</set>
    </if>
    <update in="dbmigration" entity="Entities">
      <where>
        <condition attr="EntityID" op="eq">{Entity.KeyField}</condition>
        <condition attr="RelatedEntityID" op="eq">{Entity.RelatedKeyField}</condition>
        <condition attr="EntityName" op="eq">{EntityName}</condition>
      </where>
      <attr name="State" unless="IsDirty">SUCCESS</attr>
      <attr name="State" if="IsDirty">PARTIAL</attr>
      <attr name="IsDirty">{IsDirty}</attr>
      <attr name="AttributesMappingVersion">{Settings.AttributesMappingVersion}</attr>
    </update>
    <onerror of="typeof System.Exception" var="ex">
      <update in="dbmigration" entity="Entities">
        <where>
          <condition attr="EntityID" op="eq">{Entity.KeyField}</condition>
          <condition attr="RelatedEntityID" op="eq">{Entity.RelatedKeyField}</condition>
          <condition attr="EntityName" op="eq">{EntityName}</condition>
        </where>
        <attr name="State">FAILED</attr>
        <attr name="IsDirty">{IsDirty}</attr>
        <attr name="AttributesMappingVersion">{Settings.AttributesMappingVersion}</attr>
      </update>
      <set Params="new Object()" Params.EntityID="Entity.KeyField" Params.RelatedEntityID="Entity.RelatedKeyField" Params.Exception="ex" Params.Settings="Settings" Params.Message="'Failed to process entity ' + Entity[PrimaryField] + '(' + Entity.KeyField + '): ' + ex" />
      <log>{Params.Message}</log>
      <LogError CallSettings="Params" />
    </onerror>
  </sandbox>
</script>