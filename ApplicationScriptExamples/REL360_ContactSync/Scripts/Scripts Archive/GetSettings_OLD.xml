<script>
	<log>Reading settings...</log>
	<exception if="!Context.isSet">Context parameter is required.</exception>

	<set Settings="new Object()"
		Settings.PageSize=						"400"
		Settings.UsePaging=						"false"
		Settings.ManualSyncCategory=			"'Force Sync'"
		Settings.DeactivationMode=				"'UnLink'"
		Settings.DeletionMode=					"'UnLink'"
		Settings.UcDeletionMode=				"'UnLink'"
		Settings.UcDeactivationMode=			"'UnLink'"
		Settings.MarkAsPrivateMode=				"'CleanOut'"
		Settings.CRMPrivateAction=				"'delete'"
		Settings.OutlookFolder=					"'Contacts Moved By CRM'"
		Settings.ExchangeFileAs=				"'firstname lastname'"
		Settings.DeactivationMergeMode=			"''"
		Settings.ExtendedLog=					"'1'"
		Settings.SendEmailNotification=			"'0'"
		Settings.SendEmailNotificationMethod=	"'CRMEmailActivity'"
		Settings.SendToRecipients=				"''"
		Settings.SMTPPort=						"'25'"
		Settings.SMTPServer=					"''"
		Settings.SMTPEmailFrom=					"''"
		Settings.CRMEmailActivityFromUserID=	"''"
		Settings.OnboardingCrmXmlMode=			"'exchange'"
		Settings.OnboardingDuplicationMode=		"'skip'"
		Settings.OnboardingIgnorePrefDomains=	"'0'"
		Settings.ConflictingDataPriority=		"'crm'"
		Settings.OneWaySync=					"'0'"
		Settings.OptOutCategories=				"''"
		Settings.ContactSyncEnabled=			"'true'"
		Settings.OnboardingRequestedSyncStop=	"'false'"
		Settings.SyncContactCategories=			"'0'"
		Settings.SyncNodes=						"null"
		Settings.ImageSync=						"'1'"
		Settings.SyncMainFolderOnly=			"'1'"
		Settings.PrivateFieldsEnabled=			"'0'"
		Settings.DeployedApps=					"null"
	/>
	
	<!-- ConflictingDataPriority - 'crm' or 'exchange'-->
	<!-- CreateNewContactsInCrmMode = CreateAll / MergeDuplicates -->
	<!-- SendEmailNotificationMethod = CRMEmailActivity / SMTP -->

	<set SettingMapping = "new Dictionary([
			'Sync_PageSize': 				'PageSize',
			'Sync_UsePaging': 				'UsePaging',
			'ManualSyncCategory':			'ManualSyncCategory',
			'DeactivationMode': 			'DeactivationMode',
			'DeletionMode': 				'DeletionMode',
			'UcDeletionMode': 				'UcDeletionMode',
			'UcDeactivationMode': 			'UcDeactivationMode',
			'MarkAsPrivateMode': 			'MarkAsPrivateMode',
			'CRMPrivateAction': 			'CRMPrivateAction',
			'OutlookFolder': 				'OutlookFolder',
			'ExchangeFileAs': 				'ExchangeFileAs',
			'DeactivationMergeMode': 		'DeactivationMergeMode',
			'ExtendedLog': 					'ExtendedLog',
			'SendEmailNotification': 		'SendEmailNotification',
			'SendEmailNotificationMethod': 	'SendEmailNotificationMethod',
			'SendToRecipients': 			'SendToRecipients',
			'SMTPPort': 					'SMTPPort',
			'SMTPServer': 					'SMTPServer',
			'SMTPEmailFrom': 				'SMTPEmailFrom',
			'CRMEmailActivityFromUserID': 	'CRMEmailActivityFromUserID',
			'OnboardingCrmXmlMode': 		'OnboardingCrmXmlMode',
			'OnboardingDuplicationMode': 	'OnboardingDuplicationMode',
			'OnboardingIgnorePrefDomains': 	'OnboardingIgnorePrefDomains',
			'ConflictingDataPriority': 		'ConflictingDataPriority',
			'OneWaySync': 					'OneWaySync',
			'OptOutCategories': 			'OptOutCategories',
			'ContactSyncEnabled': 			'ContactSyncEnabled',
			'OnboardingRequestedSyncStop':	'OnboardingRequestedSyncStop',
			'SyncContactCategories':		'SyncContactCategories',
			'REL360 Contacts Sync Nodes':	'SyncNodes',
			'REL360 Image Sync':			'ImageSync',
			'Sync Main Folder Only':		'SyncMainFolderOnly',
			'Private Fields Enabled':		'PrivateFieldsEnabled',
			'REL360 Deployed Apps':			'DeployedApps'
		])"/>

	<select from="crm" entity="vs360_setting" into="readSettings">
		<param name="NoLock">{true}</param>
		<where>
			<condition attr="vs360_name" op="in">{SettingMapping.Keys}</condition>
		</where>
		<attr name="vs360_name"/>
		<attr name="vs360_value"/>
	</select>

	<for var="s" in="readSettings">
		<set var="Settings[SettingMapping[s.vs360_name]]">{s.vs360_value as 'string'}</set>
	</for>

	<set
		Settings.OptOutCategories="Utils.SplitIntoUniqueList(Settings.OptOutCategories, ',')"
		Settings.ContactSyncEnabled="Settings.ContactSyncEnabled eq '1' or Settings.ContactSyncEnabled eq 'true' ?? false"
		Settings.OnboardingRequestedSyncStop="Settings.OnboardingRequestedSyncStop eq '1' or Settings.OnboardingRequestedSyncStop eq 'true' ?? false"
		Settings.OnboardingIgnorePrefDomains="Settings.OnboardingIgnorePrefDomains eq '1' or Settings.OnboardingIgnorePrefDomains eq 'true' ?? false"
		Settings.SyncContactCategories="Settings.SyncContactCategories eq '1' or Settings.SyncContactCategories eq 'true' ?? false" 
		Settings.ImageSync="Settings.ImageSync eq '1' or Settings.ImageSync eq 'true' ?? false" 
		Settings.SyncMainFolderOnly="Settings.SyncMainFolderOnly eq '1' or Settings.SyncMainFolderOnly eq 'true' ?? false"
		Settings.PrivateFieldsEnabled="Settings.PrivateFieldsEnabled eq '1' or Settings.PrivateFieldsEnabled eq 'true' ?? false"/>


	<if condition="Settings.SyncNodes.isSet and Settings.SyncNodes ne ''">
	
		<set var="nodes">{new Dictionary()}</set>
		
		<set var="lines">{Utils.Split(Settings.SyncNodes, ';')}</set>
		<for var="line" in="lines">
            <set var="lineParts">{Utils.Split(line, ':')}</set>
			
			<if condition="lineParts.Count eq 2">
                <set var="nodeName">{lineParts[0].Trim()}</set>
				
				<set var="teams">{new List()}</set>
				
				<set var="splittedTeams">{Utils.Split(lineParts[1], ',')}</set>
				<for var="rawTeamName" in="splittedTeams">
                    <set var="teams[]">{rawTeamName.Trim()}</set>
                </for>
				
				<set var="nodes[nodeName]">{teams}</set>
            </if>
        </for>
		
		<set var="Settings.SyncNodes">{nodes}</set>
    </if>
	
	<exception if="!Settings.DeployedApps.isSet">REL360DeployedApps setting was not defined</exception>
	
	<if condition="Settings.DeployedApps.isSet and Settings.DeployedApps ne ''">
		<set var="settingSplitted">{Utils.Split(Settings.DeployedApps, ';')}</set>
		
		
		<set var="products">{new List()}</set>
		
		<for var="product" in="settingSplitted">
            <set var="products[]">{product.Trim()}</set>
        </for>
		
		<set obj="new Object()"
			 obj.Onboarding="false"
			 obj.ContactSync="false"
			 obj.EmailProcessing="false"
			 obj.Scoring="false" />
		
		<for var="productName" in="products">
			
			<if condition="obj.ContainsKey(productName)">
                <set var="obj[productName]">{true}</set>
            </if>
        </for>
		
		<set var="Settings.DeployedApps">{obj}</set>
	</if>
	
	
  <set var="Context.Settings">{Settings}</set>
</script>