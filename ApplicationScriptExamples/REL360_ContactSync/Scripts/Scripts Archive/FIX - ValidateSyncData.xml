<script>
	<!--  ******************************* -->
	<!--   SCRIPT CONFIGURATION SECTION   -->
	<!--  ******************************* -->
	<!--   Examine/evaluate carefully     -->
	<!--   prior to running script.       -->
	<!--  ******************************* -->
	
	<set var="LOG_ONLY">{true}</set>
	<set var="teamsList">{[
		"SyncTeam 1", "SyncTeam 2", "SyncTeam 3"
	]}</set>

	<!-- Live Log Setup -->
	<set var="LiveLog">{new Object()}</set>
	<set var="LiveLog.UseLog">{true}</set>
	<set var="LiveLog.Text"/>
	<set var="LiveLog.FileName">C:\Temp\Sync360 LiveLogs\SyncDataValidation - {Utils.Now.ToString("yyyy-MM-dd_hh-mm-ss")}</set>

	<!--  *********************************** -->
	<!--   END SCRIPT CONFIGURATION SECTION   -->
	<!--  *********************************** -->
	
	
	<set Context="new Object()"
		 Context.Employee="null" 
		 Context.Settings="null"/>
		 
	<GetSettings 		Context="Context" />
	
	<select from="crm" entity="contact" var="contacts">
        <attr name="contactid"/>
        <attr name="statecode"/>
        <attr name="masterid"/>
    </select>
	
	<set var="CrmContacts">{new Dictionary()}</set>
	<for var="c" in="contacts">
        <set var="CrmContacts[c.contactid.ToString().ToLower()]">{c}</set>
    </for>
	
	<!-- Select employee ids from team -->
	<select from="crm" entity="vs360_vs360_employee_team" var="teammemberships">
		<join type="inner" entity="team" to="teamid" from="teamid" as="team">
			<where>
				<condition attr="name" op="in">{teamsList}</condition>
			</where>
		</join>
		<attr name="vs360_employeeid"/>
	</select>

	<for var="tm" in="teammemberships">

		<!-- Select employee fields from CRM -->
		<select from="crm" entity="vs360_employee" var="employees">
			<where>
				<condition attr="vs360_employeeid" op="eq">{tm.vs360_employeeid}</condition>
				<condition attr="emailaddress" op="ex" />
				<condition attr="emailaddress" op="ne"></condition>
				<condition attr="statecode" op="eq">{0}</condition>
			</where>
			<attr name="vs360_employeeid"/>
			<attr name="vs360_name"/>
			<attr name="emailaddress"/>
		</select>

		<set var="e">{employees[0]}</set>

		<set var="LiveLog.Text">Processing employee: {e.vs360_name}</set>
		<LiveLog LiveLog="LiveLog"/>
		
		<set var="MissingRelationships">{new List()}</set>
		<set var="MissingContacts">{new List()}</set>
		<set var="RelationshipsToActivate">{new List()}</set>
		<set var="ContactsToActivate">{new List()}</set>
		
		<sandbox>
			<context for="exchange" user="{e.emailaddress}">

				<select from="exchange" entity="contact" var="exContacts">
					<where>
						<if condition="Settings.SyncMainFolderOnly eq false">
							<condition attr="parententryid" op="ne">deleteditems</condition>
							<condition attr="@FolderName" op="eq">root/allitems</condition>
							<if condition="Settings.OutlookFolder.isSet and Settings.OutlookFolder ne ''">
								<condition attr="parententryid" op="ne">{Settings.OutlookFolder}</condition>
							</if>
						</if>
						<condition attr="crmid" op="ex" />
						<!-- <condition attr="crmLinkState" op="eq">{2}</condition> -->
						<condition attr="crmLinkState_vs360" op="eq">{2}</condition>
						
						<for var="outCategory" in="Context.Settings.OptOutCategories">
							<not>
								<condition attr="Keywords" op="eq">{outCategory}</condition>
							</not>
						</for>
						<or>
							<condition attr="sensitivity" op="ne">{2}</condition>
							<not>
								<condition attr="sensitivity" op="ex"/>
							</not>
						</or>
					</where>
					<attr name="EntryId"/>
					<attr name="crmid"/>
				</select>

				<set var="LiveLog.Text">  {exContacts.Count} contacts loaded from Exchange...</set>
				<LiveLog LiveLog="LiveLog"/>
				
				
				<select from="crm" entity="vs360_relationship" var="Relationships">
					<where>
						<condition attr="vs360_deletedinoutlook" op="not-null" />
						<condition attr="vs360_employeeid" op="eq">{e.vs360_employeeid}</condition>
					</where>

					<attr name="vs360_contactid"/>
					<attr name="vs360_relationshipid"/>
					<attr name="vs360_deletedinoutlook"/>
					<attr name="vs360_syncwithoutlook"/>
					<attr name="statecode"/>
					<order by="statecode"/>
				</select>
				
				<set var="LiveLog.Text">  {Relationships.Count} relationships loaded from Dynamics...</set>
				<LiveLog LiveLog="LiveLog"/>
				
				
				<set var="RelsByContactId">{new Dictionary()}</set>
				<for var="rel" in="Relationships">
					<set var="RelsByContactId[rel.vs360_contactid.Id.ToString().ToLower()]">{rel}</set>
				</for>
				
				<set var="LiveLog.Text">  {Relationships.Count} contacts extracted from relationships...</set>
				<LiveLog LiveLog="LiveLog"/>
				
				
				
				<for var="exCnt" in="exContacts">
					<set var="exCrmId">{exCnt.crmid.ToLower()}</set>
					
					<set var="crmContact">{CrmContacts[exCrmId] ?? null}</set>
					
					<if condition="!crmContact.isSet">
                        <set var="LiveLog.Text">  {exCrmId} contact is missing in CRM...</set>
						<LiveLog LiveLog="LiveLog"/>
						
						<set var="MissingContacts[]">{exCrmId}</set>
						
						
						<!--SKIP-->
						
						<break/>
                    </if>
					
					
					<if condition="crmContact.statecode eq 1 and !crmContact.masterid.isSet">
                        <set var="LiveLog.Text">  {exCrmId} contact will be activated...</set>
						<LiveLog LiveLog="LiveLog"/>
						
						<set var="ContactsToActivate[]">{exCrmId}</set>
						
						<!--ACTIVATE-->
						<if condition="!LOG_ONLY">
                            <update in="crm" entity="contact">
								<where>
									<condition attr="contactid" op="eq">{exCrmId}</condition>
								</where>
								<attr name="statecode">{0}</attr>
							</update>
                        </if>
                    </if>
					
					
					
					<set var="crmRelationship">{RelsByContactId[exCrmId] ?? null}</set>
					
					<if condition="!crmRelationship.isSet">
						<set var="LiveLog.Text">  Relationship for {exCrmId} contact is missing...</set>
						<LiveLog LiveLog="LiveLog"/>
						
                        <set var="MissingRelationships[]" if="!rel.isSet">{exCrmId}</set>
						
						<break />
                    </if>
					
					<set var="relDataToUpdate">{new Dictionary()}</set>
					
					<if condition="crmRelationship.statecode ne 0">
                        <set var="LiveLog.Text">  {crmRelationship.vs360_relationshipid} relationship will be activated...</set>
						<LiveLog LiveLog="LiveLog"/>
						
						<set var="relDataToUpdate['statecode']">{0}</set>
                    </if>
					
					
					<if condition="crmRelationship.vs360_deletedinoutlook ne 0">
                        <set var="LiveLog.Text">  {crmRelationship.vs360_relationshipid} relationship deletedinoutlook will be updated...</set>
						<LiveLog LiveLog="LiveLog"/>
						
						<set var="relDataToUpdate['vs360_deletedinoutlook']">{0}</set>
                    </if>
					
					<if condition="crmRelationship.vs360_syncwithoutlook ne true">
                        <set var="LiveLog.Text">  {crmRelationship.vs360_relationshipid} relationship syncwithoutlook will be updated...</set>
						<LiveLog LiveLog="LiveLog"/>
						
						<set var="relDataToUpdate['syncwithoutlook']">{true}</set>
                    </if>
					
					<if condition="relDataToUpdate.Count gt 0">
						<set var="RelationshipsToActivate[]">{exCrmId}</set>
                        <set var="LiveLog.Text">  {crmRelationship.vs360_relationshipid} will be updated: {relDataToUpdate}</set>
						<LiveLog LiveLog="LiveLog"/>
						
						<if condition="!LOG_ONLY">
                            <update in="crm" entity="vs360_relationship">
                                <where>
                                    <condition attr="vs360_relationshipid" op="eq">{crmRelationship.vs360_relationshipid}</condition>
                                </where>
                                <for var="updKvP" in="relDataToUpdate">
                                    <attr name="{updKvP.Key}">{updKvP.Value}</attr>
                                </for>
                            </update>
                        </if>
                    </if>
				</for>
				
				<set var="LiveLog.Text">STATS FOR {e.emailaddress}: {Utils.NewLine}</set>
				<set var="LiveLog.Text">{LiveLog.Text}{'Contacts in Exchange'.PadRight(32)}: {exContacts.Count} {Utils.NewLine}</set>
				<set var="LiveLog.Text">{LiveLog.Text}{'Relationships in CRM'.PadRight(32)}: {RelsByContactId.Count} {Utils.NewLine}</set>
				<set var="LiveLog.Text">{LiveLog.Text}{'Missing Contacts in CRM'.PadRight(32)}: {MissingContacts.Count} {Utils.NewLine}</set>
				<set var="LiveLog.Text">{LiveLog.Text}{'Contacts To Activate in CRM'.PadRight(32)}: {ContactsToActivate.Count} {Utils.NewLine}</set>
				<set var="LiveLog.Text">{LiveLog.Text}{'Missing Relationships in CRM'.PadRight(32)}: {MissingRelationships.Count} {Utils.NewLine}</set>
				<set var="LiveLog.Text">{LiveLog.Text}{'Relationships To Activate in CRM'.PadRight(32)}: {RelationshipsToActivate.Count} {Utils.NewLine}</set>
				<LiveLog LiveLog="LiveLog"/>
			</context>
		</sandbox>
		

	</for>


</script>
