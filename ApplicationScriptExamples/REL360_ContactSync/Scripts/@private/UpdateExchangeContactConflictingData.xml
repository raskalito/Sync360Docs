<!--UpdateExchangeContactConflictingData-->
<!-- 
		Call Example:
      <var CallObject='new Object()'/>
      <set var="CallObject.Contactid">{'4E412729-6769-E611-80F0-5065F38B11C1' as 'Guid'}</set>
      <set var="CallObject.Mapping">{Mapping}</set>
      <set var="CallObject.ExContact">{excontact}</set>
      <set var="CallObject.Employee">{Employee}</set>
      <call name="UpdateExchangeContactConflictingData" CallObject="CallObject"/>
-->

<script>

	<set var="Mapping">{CallObject.Mapping}</set>
	<set var="excontact">{CallObject.ExContact}</set>
	<set var="Employee">{CallObject.Employee}</set>
	<set var="Settings">{CallObject.Settings}</set>

	<select from="crm" entity="contact" var="existingCrmContacts">
		<where>
			<condition attr="contactid" op="eq">{CallObject.Contactid}</condition>
		</where>
		<attr name="contactid" />
		<attr name="parentcustomerid" />
		<if condition="Settings.ImageSync">
			<attr name="entityimage"/>
		</if>
		<for var="mapping" in="Mapping.ContactMapping">
			<if condition="!mapping.Multiline.isSet">
				<attr name="{mapping.Crm}" />
			</if>
		</for>
		<for var="mapping" in="Mapping.ContactMultiLineMapping">
			<for var="multiLineMapping" in="mapping.Crm">
				<attr name="{multiLineMapping}" />
			</for>
		</for>
	</select>

	<set var="crmContact">{existingCrmContacts[0]}</set>
  
	<set var="mappingsToProcess">{new List()}</set>
	<set var="multiLineMappingsValues">{new List()}</set>

	<!-- Simple mapping -->
	<for var="mapping" in="Mapping.ContactMapping">
		<!-- CRM doesn't equal to exchange -->
		<if condition="!mapping.Multiline.isSet and crmContact[mapping.Crm].isSet and excontact[mapping.Exchange].isSet">
			<set crmValue="crmContact[mapping.Crm]"/>
			<set exValue="null"/>
			
			<set mappingValue="excontact[mapping.Exchange]"/>
			<set var="exValue" if="mapping.Type eq 'String' and mapping.ExchangeType eq 'String'">{mappingValue.Replace("&#xD;&#xA;", "&#xA;").Replace("&#xA;", "&#xD;&#xA;").TrimEnd()}</set>
			<set var="exValue" if="mapping.Type eq 'String' and mapping.ExchangeType eq 'Array'">{Utils.Join(mappingValue, ', ')}</set>
			<set var="exValue" if="mapping.Type eq 'DateTime' and mapping.ExchangeType eq 'DateTime'">{Utils.StringToDate(mappingValue, "yyyy-MM-dd'T'HH:mm:ss'Z'")}</set>
			
			<if condition="crmValue != exValue">
				<set var="mappingsToProcess[]">{mapping}</set>
			</if>
		</if>
		<!-- CRM contains data. Exchange is empty -->
		<if condition="!mapping.Multiline.isSet and crmContact[mapping.Crm].isSet and !excontact[mapping.Exchange].isSet">
			<!--<if condition="mapping.Type == 'String'">-->
				<set var="mappingsToProcess[]">{mapping}</set>
			<!--</if>-->
		</if>
	</for>
	
	<!-- entityimage mapping -->
	<context for="exchange" user="{Employee.Email}">
		<if condition="Settings.ImageSync">
			<log>Updating attachment in Exchange: {excontact.EntryId}</log>
			<set var="SHA256">{static "System.Security.Cryptography.SHA256"}</set>
			<set var="instSHA256">{SHA256.Create()}</set>
			
			<set var="crmImageHash">{null}</set>
			<if condition="crmContact['entityimage'].isSet">
				<set var="crmImageHash">{Utils.ByteArrayToBase64String(instSHA256.ComputeHash(crmContact['entityimage']))}</set>
			</if>
			
			<set var="exImageHash">{null}</set>
			<set var="exImageId">{null}</set>
			<if condition="excontact.hasattachments eq 'true'">
				<set var="exAttachments">{@exchange.GetAttachments(excontact.attachments)}</set>
				
				<for var="at" in="exAttachments">
					<set var="exImage">{null}</set>
					<set var="exImage" if="at.Name eq 'ContactPicture.jpg' and at.ContentType eq 'image/jpeg'">{at.Content}</set>
					<set var="exImageHash" if="exImage ne null">{Utils.ByteArrayToBase64String(instSHA256.ComputeHash(exImage))}</set>
					<set var="exImageId" if="exImage ne null">{at.AttachmentId.Id}</set>
				</for>
			</if>
			
			<if condition="crmImageHash ne exImageHash">
				<if condition="exImageId ne null">
					<set var="deleteList">{new List()}</set>
					<set var="deleteList[]">{exImageId}</set>
					<set>{@exchange.DeleteAttachments(deleteList)}</set>
				</if>
				
				<if condition="crmContact.entityimage ne null">
					<set var="fileList">{new List()}</set>
					
					<set var="fileAtt">
						<attr name="IsContactPhoto">{true}</attr>
						<attr name="IsContactPhotoSpecified">{true}</attr>
						<attr name="Name">ContactPicture.jpg</attr>
						<attr name="Content">{crmContact.entityimage}</attr>
					</set>
					<set var="fileList[]">{fileAtt}</set>
					
					<set>{@exchange.CreateAttachments(excontact.itemid, fileList)}</set>
				</if>
			</if>
		</if>
	</context>
	<!-- entityimage mapping -->

	<!-- Multi-line mapping -->
	<for var="mapping" in="Mapping.ContactMultiLineMapping">
		<set var="cleanValue">{excontact[mapping.Exchange].Replace("&#xD;&#xA;", "&#xA;").Replace("&#xD;", "&#xA;") ?? null}</set>
		
		<set var="multiLineExchangeValues">{Utils.Split(cleanValue, "&#xA;")}</set>
		<set var="multiLineExchangeValue">{Utils.Join(multiLineExchangeValues,'')}</set>
		<set var="multiLineCrmValues">{new List()}</set>

		<for var="multiLineMapping" in="mapping.Crm">
			<if condition="crmContact[multiLineMapping].isSet">
				<set var="multiLineCrmValues[]">{crmContact[multiLineMapping]}</set>
			</if>
		</for>

		<set var="multiLineCrmValue">{Utils.Join(multiLineCrmValues,'')}</set>

		<if condition="multiLineCrmValue.isSet and multiLineCrmValue != '' and multiLineCrmValue != multiLineExchangeValue">
			<set var="multiLineMappingsValues[]">
				<attr name="Name">{mapping.Exchange}</attr>
				<attr name="Value">{Utils.Join(multiLineCrmValues, "&#xD;&#xA;")}</attr>
			</set>
		</if>
		
	</for>

	<!-- Company mapping -->
	<set var="companyMappingRequired">{false}</set>
	<if condition="crmContact.parentcustomerid.isSet and crmContact.parentcustomerid.Name.isSet and crmContact.parentcustomerid.Name != ''">
		<if condition="!excontact.companyname.isSet or excontact.companyname != crmContact.parentcustomerid.Name">
			<set var="companyMappingRequired">{true}</set>
		</if>
	</if>
  
	<if condition="mappingsToProcess.Count gt 0 or multiLineMappingsValues.Count gt 0 or companyMappingRequired">
	
		<context for="exchange" user="{Employee.Email}">
		
			<update in="exchange" entity="contact">
				<where>
					<if condition="Settings.SyncMainFolderOnly eq false">
						<condition attr="@FolderName" op="eq">root/allitems</condition>
					</if>
					<condition attr="EntryId" op="eq">{excontact.EntryId}</condition>
				</where>
				<for var="mapping" in="mappingsToProcess">
					<set mappingValue="crmContact[mapping.Crm]"/>
					<attr name="{mapping.Exchange}" if="mapping.Type eq 'String' and mapping.ExchangeType eq 'String'">{mappingValue}</attr>
					<attr name="{mapping.Exchange}" if="mapping.Type eq 'String' and mapping.ExchangeType eq 'Array'">{Utils.SplitIntoUniqueList(mappingValue.Replace(";", ","), ",")}</attr>
					<attr name="{mapping.Exchange}" if="mapping.Type eq 'DateTime' and mapping.ExchangeType eq 'DateTime'">{Utils.DateToString(mappingValue, 'yyyy-MM-ddTHH:mm:ssZ')}</attr>
				</for>
				<for var="mapping" in="multiLineMappingsValues">
					<attr name="{mapping.Name}">{mapping.Value}</attr>
				</for>
				<attr if="companyMappingRequired" name="companyname">{crmContact.parentcustomerid.Name}</attr>
			</update>
			
		</context>
			
	</if>

</script>