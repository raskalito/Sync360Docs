<script>
	<!--  ********************************************************************************************* -->
	<!--	Teams Copy																					-->
	<!--		This script replicates the memberships in one team to another.							-->
	<!--		- Can be run between teams on the same or different environments.						-->
	<!--		- If target team name is left blank, it will use the source team name					-->
	<!--		- If target team does NOT exist, then it will create the new team based on				-->
	<!--			name selection.																		-->
	<!--  ********************************************************************************************* -->

	<!--  ******************************* -->
	<!--   SCRIPT CONFIGURATION SECTION   -->
	<!--  ******************************* -->
	<!--   Examine/evaluate carefully     -->
	<!--   prior to running script.       -->
	<!--  ******************************* -->
	<set var="TimeStampAsText">{Utils.Now.ToString('yyyy-MM-dd-hh-mm')}</set>

	<!-- START: Logging Setup -->
	<set var="LiveLog">{new Object()}</set>
	<set var="LiveLog.UseLog">{true}</set>
	<set var="LiveLog.Text"/>
	<set var="LiveLog.FileName">C:\Temp\Sync360 LiveLogs\REL360SyncTeamCopyLog {TimeStampAsText}</set>

	<var BlockInfo="new Object()"/>
	<set var="BlockInfo.LiveLog">{LiveLog}</set>
	<set var="BlockInfo.Title">REL360 Sync Team Copy</set>
	<!-- END: Logging Setup -->

	<!-- Script Behavior Settings -->
	<set var="crmSource">crm</set>
	<!-- Source Connection in the TeamCopy config file -->
	<set var="teamsourceName">TestTeamCopy</set>
	<!-- Name of the team in the source CRM system -->
	<set var="crmTarget">crm</set>
	<!-- Target Connection in the TeamCopy config file -->
	<set var="teamtargetName">TestCopyTargetTeam</set>
	<!-- LEAVE BLANK TO USE SOURCE TEAM NAME!!!  Name of the team to create in the target CRM system -->

	<!--  *********************************** -->
	<!--   END SCRIPT CONFIGURATION SECTION   -->
	<!--  *********************************** -->

	<set var="BlockInfo.Mode">Start</set>
	<set var="LiveLog.Text"/>
	<DisplayStartEndBlock BlockInfo="BlockInfo"/>

	<log>Get team from source CRM...</log>
	<select from="{crmSource}" entity="team" var="ermTeams">
		<where>
			<condition attr="name" op="eq">{teamsourceName}</condition>
		</where>
		<attr name="teamid"/>
		<attr name="name"/>
	</select>

	<exception if="!ermTeams.isSet or ermTeams.Count le 0">Team (teamsourceName) was not found.</exception>

	<log>Copying {teamsourceName}...</log>
	<set var="currentTeam">{ermTeams[0]}</set>

	<set var="newTeamName"/>
	<if condition="!teamtargetName.isSet or teamtargetName eq null or teamtargetName = ''">
		<then>
			<set var="newTeamName">{teamsourceName}</set>
		</then>
		<else>
			<set var="newTeamName">{teamtargetName}</set>
		</else>
	</if>

	<log>Get target team from CRM...</log>
	<select from="{crmTarget}" entity="team" var="targetTeams">
		<where>
			<condition attr="name" op="eq">{newTeamName}</condition>
		</where>
		<attr name="teamid"/>
		<attr name="name"/>
	</select>

	<if condition="targetTeams.Count gt 0">
		<then>
			<set var="targetTeamID">{targetTeams[0].teamid}</set>
		</then>
		<else>
			<create in="{crmTarget}" entity="team" var="targetTeamID">
				<attr name="name">{newTeamName}</attr>
			</create>
			<if condition="targetTeamID != null">
				<log>Team {newTeamName} created in target system with ID {targetTeamID}</log>
			</if>
		</else>
	</if>

	<!-- Copy employee members -->
	<select from="{crmSource}" entity="vs360_vs360_employee_team" into="sourceMembers">
		<where>
			<condition attr="teamid" op="eq">{currentTeam.teamid}</condition>
		</where>
		<join type="inner" entity="vs360_employee" to="vs360_employeeid" from="vs360_employeeid" as="Emp">
			<attr name="vs360_name" as="EmpFullName"/>
			<attr name="emailaddress" as="EmpEmail"/>
		</join>
		<attr name="vs360_employeeid"/>
	</select>

	<exception if="!sourceMembers.isSet or sourceMembers.Count le 0">NO members to process.</exception>

	<for var="member" in="sourceMembers">

		<if condition="member.EmpEmail.isSet">
			<then>
				<!-- Get target EmployeeID -->
				<select from="{crmTarget}" entity="vs360_employee" var="targetEmp" count="1">
					<where>
						<condition attr="emailaddress" op="eq">{member.EmpEmail}</condition>
					</where>
					<attr name="vs360_employeeid" as="targetEmpID"/>
				</select>

				<if condition="targetEmp.isSet and targetEmp[0].isSet and targetEmp[0].targetEmpID.isSet">
					<then>
						<log>Creating Team Membership for {member.EmpEmail}...</log>
						<set var="targetEntityName">team</set>
						<set var="targetEntityId">{targetTeamID}</set>
						<set var="otherEntityName">vs360_employee</set>
						<set var="otherEntityId">{targetEmp[0].targetEmpID}</set>
						<set var="relationshipName">vs360_vs360_employee_team</set>
						<set var="assocStr">@{crmTarget}.AssociateEntities(targetEntityName, targetEntityId, otherEntityName, otherEntityId, relationshipName)</set>
						<set var="assocResult">{Utils.Eval(assocStr)}</set>
					</then>
					<else>
						<log>NOT FOUND:  Employee {member.EmpEmail} not found.</log>
					</else>
				</if>
			</then>
			<else>
				<log>Source employee email missing: {member.EmpFullName}</log>
			</else>
		</if>


	</for>

	<set var="BlockInfo.Mode">End</set>
	<set var="LiveMode.Text"/>
	<DisplayStartEndBlock BlockInfo="BlockInfo"/>

</script>