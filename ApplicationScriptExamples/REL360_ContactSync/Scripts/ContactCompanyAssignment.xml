<script>
	<!-- Run Configuration attributes -->
	<var BlockInfo="new Object()"/>
	<set var="BlockInfo.Title">Contact Company Assignment</set>
	<set var="BlockInfo.Mode">Start</set>
	<DisplayStartEndBlock BlockInfo="BlockInfo"/>

	<!--  *********************************** -->
	<!--   END SCRIPT CONFIGURATION SECTION   -->
	<!--  *********************************** -->

	<!-- Load Contacts -->
	<log>Reading Contact Data...</log>
	<select from="crm" entity="contact" var="contacts">
		<where>
            <condition attr="statecode" op="eq">{0}</condition>
            <condition attr="emailaddress1" op="not-null" />
            <condition attr="parentcustomerid" op="null" />
        </where>
		<attr name="contactid"/>
		<attr name="fullname"/>
		<attr name="emailaddress1"/>
    </select>
	
	<log>{contacts.Count} contacts found for processing...</log>
	
	
	<if condition="contacts.Count gt 1">
        
		<log>Grouping contacts by domains...</log>
		<set var="ContactsByDomains">{new Dictionary()}</set>
		
		<for var="c" in="contacts">
            <set var="emailDomain">{Utils.Split(c.emailaddress1, '@')[1].ToLower() ?? null}</set>
			<continue if="!emailDomain.isSet" />
			
			<set var="contactObj">
				<attr name="Id">{c.contactid}</attr>
				<attr name="Name">{c.fullname}</attr>
				<attr name="Email">{c.emailaddress1}</attr>
			</set>
			
			<if condition="!ContactsByDomains.ContainsKey(emailDomain)">
                <set var="ContactsByDomains[emailDomain]">{new List()}</set>
            </if>
			<set var="ContactsByDomains[emailDomain][]">{contactObj}</set>
        </for>
		<log>{ContactsByDomains.Count} groups extracted.</log>
		
		
		<log>Reading domains Data...</log>
		<select from="crm" entity="vs360_companydomain" var="domains">
			<where>
				<condition attr="statecode" op="eq">{0}</condition>
				<condition attr="vs360_companyid" op="not-null" />
			</where>
			<attr name="vs360_companydomainid"/>
			<attr name="vs360_companyid"/>
			<attr name="vs360_name"/>
		</select>
		<log>{domains.Count} domains found...</log>
		
		
		<set var="PromotedDomains">{new Dictionary()}</set>
		<for var="d" in="domains">
            <set var="PromotedDomains[d.vs360_name.ToLower()]">{d.vs360_companyid}</set>
        </for>
		
		<set var="counter">{1}</set>
		<for var="kvp" in="ContactsByDomains">
			<set var="domainName">{kvp.Key}</set>
			<set var="contacts">{kvp.Value}</set>
			
			<log>Processing {domainName} domain ({counter} out of {ContactsByDomains.Count})</log>
			
			<if condition="PromotedDomains.ContainsKey(domainName)">
                <set var="company">{PromotedDomains[domainName]}</set>
				
				<log>{domainName} is Promoted Domain. Company '{company.Name}' ({company.Id}). Updating {contacts.Count} contact(s)...</log>
				
				
				<for var="c" in="contacts">
					<log>    Updating {c.Name} ({c.Email})...</log>
					<sandbox>
                        <update in="crm" entity="contact">
							<where>
								<condition attr="contactid" op="eq">{c.Id}</condition>
							</where>
							<attr name="parentcustomerid">account:{company.Id}</attr>
						</update>
                    </sandbox>
                </for>
				
				<log></log>
            </if>
			
			
			<set var="counter">{counter + 1}</set>
		</for>
    </if>
	
	
	
	<set var="BlockInfo.Mode">End</set>
	<DisplayStartEndBlock BlockInfo="BlockInfo"/>	
	
</script>