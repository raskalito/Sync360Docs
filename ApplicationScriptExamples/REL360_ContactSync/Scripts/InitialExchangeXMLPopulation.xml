<script>
    
	<set Context="new Object()"
		 Context.Employee="null" 
		 Context.Settings="null"
		 Context.Mapping="null"
		 Context.PrivateFields="null"
		 Context.NonCorpDomains="null"/>

	<GetMapping 		Context="Context" />
	<TransformMapping 	Mapping="Context.Mapping" />
	<GetSettings 		Context="Context" />
	
	<set var="Settings">{Context.Settings}</set>
	<set var="Mapping">{Context.Mapping}</set>


	<set var="TeamName">TeamName</set>  <!--Set Team for processing -->
	
	
	<set var="leftCurveBr">{'{'}</set>
	<set var="rightCurveBr">}</set>

	<select from="crm" entity="vs360_employee" into="employees">
		<where>
			<condition attr="statecode" op="eq">{0}</condition>
            <condition attr="emailaddress" op="ex" />
		</where>
		<join entity="systemuser" to="vs360_systemuserid" from="systemuserid">
			<attr name="isdisabled" as="is_systemuser_disabled"/>
		</join>
		<join type="inner" entity="vs360_vs360_employee_team" to="vs360_employeeid" from="vs360_employeeid">
			<join type="inner" entity="team" to="teamid" from="teamid" as="">
				<where>
					<condition attr="name" op="eq">{TeamName}</condition>
				</where>
			</join>
		</join>
		<attr name="vs360_employeeid"/>
		<attr name="emailaddress"/>
		<attr name="vs360_name" />
	</select>

	<for var="employee" in="employees">
	
		<log>Employee: ({employee.vs360_employeeid}) - {employee.vs360_name} - {employee.emailaddress}</log>
		<!-- Process exchange mailbox -->
		<context for="exchange" user="{employee.emailaddress}">

			<log>Processing employee: {employee.emailaddress}</log>
			
			<!-- Get contacts from exchange -->
			<select from="exchange" var="excontacts" entity="contact">
				<where>
					<if condition="Settings.SyncMainFolderOnly eq false">
						<condition attr="parententryid" op="ne">deleteditems</condition>
						<condition attr="@FolderName" op="eq">root/allitems</condition>
						<if condition="Settings.OutlookFolder.isSet and Settings.OutlookFolder ne ''">
							<condition attr="parententryid" op="ne">{Settings.OutlookFolder}</condition>
						</if>
					</if>
					<condition attr="@BodyResponseType" op="eq">Text</condition>
					<or>
						<condition attr="sensitivity" op="ne">{2}</condition>
						<not>
							<condition attr="sensitivity" op="ex"/>
						</not>
					</or>
					<!-- <condition attr="crmLinkState" op="eq">{2}</condition> -->
					<condition attr="crmLinkState_vs360" op="eq">{2}</condition>
					<condition attr="crmid" op="ex"></condition>
					<condition attr="crmid" op="ne"></condition>
					<not>
						<condition attr="exchangexml" op="ex" />
					</not>
				</where>

				<for var="mapping" in="Mapping.ContactMapping">
					<attr name="{mapping.Exchange}"/>
				</for>
				<for var="mapping" in="Mapping.ContactMultiLineMapping">
					<attr name="{mapping.Exchange}"/>
				</for>

				<attr name="EntryId"/>
			</select>

			
			<log>Total number of exchange contacts : {excontacts.Count}</log>

			<!-- Process each exchange contact -->
			<for var="excontact" in="excontacts">
				<sandbox>
				
					<set var="pictureHash">{null}</set>
					<set var="picture">{null}</set>

					<if condition="excontact.hasattachments eq 'true'">
						<set var="atts">{@exchange.GetAttachments(excontact.attachments)}</set>

						<for var="at" in="atts">
							<if condition="at.Name eq 'ContactPicture.jpg' and at.ContentType eq 'image/jpeg'">
								<set var="picture">{at.Content}</set>
								<set var="pictureHash">{Utils.ByteArrayToBase64String(instSHA256.ComputeHash(picture))}</set>
								<log>Contact picture was found.</log>
								<break />
							</if>
						</for>
					</if>
					<update in="exchange" entity="contact">
						<where>
							<if condition="Settings.SyncMainFolderOnly eq false">
								<condition attr="@FolderName" op="eq">root/allitems</condition>
							</if>
							<condition attr="EntryId" op="eq">{excontact.EntryId}</condition>
						</where>
						<set var="dataForExXml">{new Dictionary()}</set>
						<for var="mapping" in="Mapping.ContactMapping">
							<if condition="!mapping.Multiline.isSet">
								<set if="mapping.ExchangeType ne 'Array'" var="dataForExXml[mapping.Exchange]">{excontact[mapping.Exchange] ?? null}</set>
								<set if="mapping.ExchangeType eq 'Array'" var="dataForExXml[mapping.Exchange]">{Utils.Join(excontact[mapping.Exchange], ', ') ?? null}</set>
							</if>
						</for>

						<for var="mapping" in="Mapping.ContactMultiLineMapping">
							<set var="dataForExXml[mapping.Exchange]">{excontact[mapping.Exchange]}</set>
						</for>

						<if condition="pictureHash.isSet">
							<set var="dataForExXml['entityimage']">{pictureHash}</set>
						 </if>
						
						<attr name="exchangexml">{Xml.ToXml(dataForExXml, "contact")}</attr>
					</update>
				</sandbox>
			</for>
		</context>
	</for>
	
	<log>Finish: {Utils.Now}</log>
</script>