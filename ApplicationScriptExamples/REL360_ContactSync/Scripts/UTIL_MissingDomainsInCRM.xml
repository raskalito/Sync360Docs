<script>
<!-- 
***************************************************************************************************
    Script Name: UTIL_MissingDomainsInCRM.xml
    Description: Compares the list of domains in Domains Load CSV file to the domains in CRM.
					It reports any domains that are in the report but NOT in CRM.

===============================================================================================
    Date			Developer								Details
===============================================================================================
    2023.12.07     	Glen Wolinsky                      		Initial development
-----------------------------------------------------------------------------------------------
	YYYY.MM.DD     	DEV NAME (COMPANY)                     	CRXXX - change description
-----------------------------------------------------------------------------------------------
===============================================================================================

***************************************************************************************************
-->

	<!--  ******************************* -->
	<!--   SCRIPT CONFIGURATION SECTION   -->
	<!--  ******************************* -->
	<!--   Examine/evaluate carefully     -->
	<!--   prior to running script.       -->
	<!--  ******************************* -->

	<!-- INCLUDES -->
	<include name="TimeStampAsText"/>

	<!-- Prints log text and adds to external log file -->
	<var LiveLog="new Object()"/>
	<set var="LiveLog.UseLog">{true}</set> <!-- TRUE will send window log entries to text file.   FALSE will not create text file but still log to window -->
	<set var="LiveLog.FileName">C:\Temp\Sync360 LiveLogs\MissingDomainsInCRM_RunLog_{TimeStampAsText}.txt</set>

	<var BlockInfo="new Object()"/>
	<set var="BlockInfo.Title">Missing Domains In CRM</set>
	<set var="BlockInfo.Mode">Start</set>
	<set var="BlockInfo.LiveLog">{LiveLog}</set>
	<DisplayStartEndBlock BlockInfo="BlockInfo"/>
	
	<!-- Script Behavior Settings -->
	<set var="UpdateCompanyNames">{false}</set> <!-- TRUE will update existing CRM company name from spreadsheet  FALSE will NOT update company names -->

	<!-- Data sources and output files -->
	<set var="CRM">crm</set>
	<set var="CsvPath">C:\Temp\REL360DataSources\XXXXXXXX.csv</set> <!-- Input File Name - Change as needed -->
	<set var="ExcelReportFile">C:\Temp\REL360Output\MissingCRMDomainsReport-{TimeStampAsText}.csv</set>	<!-- Report Output file path & name -->

		
	<!--  *********************************** -->
	<!--   END SCRIPT CONFIGURATION SECTION   -->
	<!--  *********************************** -->

	<!-- WARNING: You need to create the Excel CSV file with a ^ symbol as delimiter instead of a comma delimeter!!!  
			This is because often, company names include a comma and some may use the pipe | symbol as well. -->	
	<set var="csvData">{Csv.Read(CsvPath, Encoding.UTF8, '^')}</set>
	
	<log>{csvData.Count} source rows found</log>
	<set var="rowNum">{0}</set>
	
	<!--CREATE OR GET CRM DOMAIN  -->
	<log>Loading domains data...</log>
	<select from="crm" entity="vs360_companydomain" var="crmDomains" >
		<attr name="vs360_companydomainid"/>
		<attr name="vs360_name"/>
	</select>
	
	
	<log>Loading domains list...</log>
	<set var="dict">{new Dictionary()}</set>
	<for var="dom" in="crmDomains">
		<set var="dict[dom.vs360_name]">{dom.vs360_name}</set>
	</for>
		
	<for var="csvRow" in="csvData">
		<sandbox>
		
        <set var="Domain">{csvRow['Domain'] ?? null}</set>
        <set var="CrmCompanyName">{csvRow['CrmCompanyName'] ?? null}</set>
        <set var="CrmCompanyID">{csvRow['CrmCompanyID'] ?? null}</set>

		<if condition="!dict[Domain].isSet">
            <then>
 				<set var="LiveLog.Text">    {Domain} MISSING in CRM...</set>
				<LiveLog LiveLog="LiveLog"/>
            </then>
        </if>
		
		</sandbox>
    </for>
	
	<set var="result">{Csv.Write(csvData, ExcelReportFile, Encoding.UTF8, ',', '"')}</set>
	<log>{Utils.NewLine}Report Created: {ExcelReportFile}</log>

	<set var="BlockInfo.Mode">End</set>
	<DisplayStartEndBlock BlockInfo="BlockInfo"/>

</script>